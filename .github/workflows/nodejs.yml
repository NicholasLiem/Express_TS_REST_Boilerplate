name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      rest_redis:
        image: redis:7.2.1
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rest_db:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: dev_user
          POSTGRES_PASSWORD: dev_password
          POSTGRES_DB: dev_database
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://dev_user:dev_password@localhost:5432/dev_database

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '20'
    
    - name: Set up .env file
      run: cp .env.example .env
      working-directory: ./src
    
    - name: Set up public key file
      run: cp public.key.example public.key
      working-directory: ./src
    
    - name: Set up private key file
      run: cp private.key.example private.key
      working-directory: ./src
      
    - name: Install dependencies
      run: yarn install
      working-directory: ./src
    
    - name: Generate prisma file
      run: npx prisma generate
      working-directory: ./src
    
    - name: Migrate prisma file
      run: npx prisma migrate deploy
      working-directory: ./src

    - name: Push db
      run: npx prisma db push
      working-directory: ./src

    - name: Install Dockerize
      run: sudo wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz && rm dockerize-linux-amd64-v0.6.1.tar.gz

    - name: Wait for Redis to start
      run: dockerize -wait tcp://localhost:6379 -timeout 1m

    - name: Run tests
      run: yarn test
      working-directory: ./src
